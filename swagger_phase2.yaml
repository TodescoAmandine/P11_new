swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/{account_ID}/transactions/{month_ID}:
    get:
      security:
      - Bearer: []
      tags:
      - Transactions Module
      summary: Get all transactions for the current month grouped by account
      description: Month for which transactions are requested
      parameters:
        - in: path
          name: account_ID
          description: ID of the account
          required: true
          type: string      
        - in: path
          name: month_ID
          description: ID of the month
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/transaction_monthResponse'
        "400":
          description: Transaction not found
        "401":
          description: Unauthorized access
        "500":
          description: Internal Server Error
  /user/transactions/{transaction_ID}:
    get:
      security:
      - Bearer: []
      tags:
      - Transactions Module
      summary: Get all specifics details from a transaction
      description: API to retrieve all specifics transactions from an account
      parameters:
        - in: path
          name: transaction_ID
          description: ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/transaction_IDResponse'
        "400":
          description: Transaction not found
        "401":
          description: Unauthorized access
        "500":
          description: Internal Server Error
  /user/transactions/{transactionId}/category:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Add category to Transaction
      description: API to add a category to a specific transaction
      parameters:
        # - in: path
        #   name: accountId
        #   required: true
        #   description: ID of the account containing the transaction
        #   type: string
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to add the category to
          type: string
        - in: body
          name: body
          description: Category payload
          required: true
          schema:
            $ref: "#/definitions/CategoryPayload"
      produces:
        - application/json
      responses:
        "200":
          description: category added successfully
        "400":
          description: Invalid request payload
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update category of Transaction
      description: API to update the category of a specific transaction
      parameters:
        # - in: path
        #   name: accountId
        #   required: true
        #   description: ID of the account containing the transaction
        #   type: string
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to update the category for
          type: string
        - in: body
          name: body
          description: Updated Category payload
          required: true
          schema:
            $ref: "#/definitions/CategoryPayload"
      produces:
        - application/json
      responses:
        "200":
          description: category updated successfully
        "400":
          description: Invalid request payload
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete category of Transaction
      description: API to delete the category of a specific transaction
      parameters:
        # - in: path
        #   name: accountId
        #   required: true
        #   description: ID of the account containing the transaction
        #   type: string
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to delete the category from
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: category deleted successfully
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /user/transactions/{transactionId}/note:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Add Note to Transaction
      description: API to add a note to a specific transaction
      parameters:
        # - in: path
        #   name: accountId
        #   required: true
        #   description: ID of the account containing the transaction
        #   type: string
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to add the note to
          type: string
        - in: body
          name: body
          description: Note payload
          required: true
          schema:
            $ref: "#/definitions/NotePayload"
      produces:
        - application/json
      responses:
        "200":
          description: Note added successfully
        "400":
          description: Invalid request payload
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update Note of Transaction
      description: API to update the note of a specific transaction
      parameters:
        # - in: path
        #   name: accountId
        #   required: true
        #   description: ID of the account containing the transaction
        #   type: string
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to update the note for
          type: string
        - in: body
          name: body
          description: Updated note payload
          required: true
          schema:
            $ref: "#/definitions/NotePayload"
      produces:
        - application/json
      responses:
        "200":
          description: Note updated successfully
        "400":
          description: Invalid request payload
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete Note of Transaction
      description: API to delete the note of a specific transaction
      parameters:
        # - in: path
        #   name: accountId
        #   required: true
        #   description: ID of the account containing the transaction
        #   type: string
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to delete the note from
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Note deleted successfully
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  transaction_month:
    type: object
    properties:
      account_ID:
        type: string
        description: Type of account
      month_ID:
        type: string
        description: ID of the month
      account_type:
        type: string
        description: Type of account
      amount:
        type: number
        description: Transaction amount
      currency:
        type: string
        description: Transaction amount
  transaction_monthResponse:
    type: object
    properties:
      account_ID:
        type: string
        description: ID of account
      date:
        type: string
        format: date
        description: Date of transaction
      account_type:
        type: string
        description: Type of account
      amount:
        type: number
        description: Transaction amount
      currency:
        type: string
        description: Transaction currency
  transaction_ID:
    type: object
    properties:
      account_ID:
        type: string
        description: ID of account
      month_ID:
        type: string
        description: ID of the month
      account_type:
        type: string
        description: Type of account
      account_number:
        type: string
        description: Account number
      description:
        type: string
        description: Transaction description
      transaction type:
        type: string
        description: Transaction description
      category:
        type: string
        description: Transaction description
      note:
        type: string
        description: Transaction description
      amount:
        type: number
        description: Transaction amount
      balance:
        type: number
        description: Account balance after transaction
      currency:
        type: string
        description: Transaction currency
  transaction_IDResponse:
    type: object
    properties:
      note:
        type: string
        description: transaction note
      category:
        type: string
        description: transaction category
  CategoryPayload:
   type: object
   properties:
      note:
       type: string
       description: The category to be added or updated
  NotePayload:
   type: object
   properties:
      note:
        type: string
        description: The note to be added or updated
  